
@mixin f-main($font-weight: 400) {
  font-weight: $font-weight;
  font-family: $ff-primary;
}

@function rem($size) {
  @return math.div($size, $fs) * 1rem;
}

@mixin fsl($font-size, $line-height: null) {
  font-size: unquote('#{calc($font-size / $fs)}rem');
  @if $line-height {
    line-height: calc($line-height / 100%);
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder{
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::placeholder  {
    @content;
  }
}


@mixin scrollbar-hidden() {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin styled-scrollbar() {
  scrollbar-width: 6px;

  &::-webkit-scrollbar {
    width: 6px;
    background-color: color(gray-light);
  }
  &::-webkit-scrollbar-track {
    background-color: color(gray-light);
  }
  &::-webkit-scrollbar-button {
    display: none;
  }
  &::-webkit-scrollbar-thumb {
    background-color: color(gray-third);
  }
}

@mixin cropText($lineCount) {
  display: -moz-box;
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -moz-box-orient: vertical;
  -webkit-box-orient: vertical;
  box-orient: vertical;
  -webkit-line-clamp: $lineCount;
  line-clamp: $lineCount;
}

@function getVw($px, $width) {
  @return $px / $width * 1vw;
}

@function font-url($filename-without-extension) {
  @return url("../assets/fonts/#{$filename-without-extension}.woff");
}

$breakpoints: (
  xxl: 1920px,
  xl: 1680px,
  ll: 1440px,
  l: 1366px,
  // d: 1280px,
  d: 1024px,
  t: 1024px,
  m: 768px,
  s: 576px,
  xs: 375px,
  xxs: 320px,
);
@function breakpoint($variant: d) {
  @return map.get($breakpoints, $variant);
}
@function media($direction: ">", $variant: d) {
  @if $direction == ">" {
    @return "(min-width: #{breakpoint($variant)})";
  } @else if $direction == "<" {
    @return "(max-width: #{breakpoint($variant) - 1px})";
  } @else if $direction == "<=" {
    @return "(max-width: #{breakpoint($variant)})";
  }
}

// columns
@function column($count, $padding, $gap) {
  @return "((100vw - (#{$padding} * 2) - (#{$gap} * (#{$count} - 1))) / #{$count})";
}

$column: column($col-count-d, $col-pad-d, $col-gap-d);
$column-small: column(
  $col-count-m,
  $col-pad-m,
  $col-gap-m
);

@function cols($count: 1, $col: $column, $gap: $col-gap-d) {
  @return calc(((#{$col} * #{$count}) + (#{$gap} * (#{$count} - 1))));
}
@function cols-g($count: 1, $col: $column, $gap: $col-gap-d) {
  @return calc(((#{$col} * #{$count}) + (#{$gap} * #{$count})));
}
@function cols-mob($count: 1) {
  @return cols($count, $column-small, $col-gap-m);
}
@function cols-mob-g($count: 1) {
  @return cols-g($count, $column-small, $col-gap-m);
}

// без calc - для встраивания в другой calc
@function cols-nc($count: 1, $col: $column, $gap: $col-gap-d) {
  @return '((#{$col} * #{$count}) + (#{$gap} * (#{$count} - 1)))';
}
@function cols-g-nc($count: 1, $col: $column, $gap: $col-gap-d) {
  @return '((#{$col} * #{$count}) + (#{$gap} * #{$count}))';
}
@function cols-mob-nc($count: 1) {
  @return cols($count, $column-small, $col-gap-m);
}
@function cols-mob-g-nc($count: 1) {
  @return cols-g($count, $column-small, $col-gap-m);
}
